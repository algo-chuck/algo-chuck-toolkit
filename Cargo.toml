[workspace]
members = [ 
  "crates/schwab-api", 
  "crates/schwab-api-core", 
  "crates/schwab-api-marketdata", 
  "crates/schwab-api-oauth", 
  "crates/schwab-api-trader", 
  "crates/schwab-api-types",
  "tools/algo-chuck-cli"
]

resolver = "3"

[workspace.package]
edition = "2024"
version = "0.1.0"
authors = ["Brian Kiernan <brian@algochuck.com>"]
license = "MIT"

[workspace.dependencies]
# Error handling
anyhow = { version = "1.0", default-features = false }
thiserror = { version = "2.0", default-features = false }

# Date/Time
chrono = { version = "0.4", default-features = false }

# Decimal handling for financial data
rust_decimal = { version = "1.35", default-features = false }

# Serialization
serde = { version = "1.0", default-features = false }
serde_json = { version = "1.0", default-features = false }

# Async runtime and HTTP client
async-trait = { version = "0.1", default-features = false }
http = { version = "1.0", default-features = false }
reqwest = { version = "0.12", default-features = false, features = ["rustls-tls", "json"] }
tokio = { version = "1.0", default-features = false }

# UUID and URL handling
uuid = { version = "1.0", default-features = false }
url = { version = "2.5", default-features = false }

# Additional dependencies used by CLI
base64 = "0.22"
rand = "0.9"

[workspace.lints.clippy]
# Enable common clippy lint groups (with lower priority than individual lints)
pedantic = { level = "warn", priority = -1 }
nursery = { level = "warn", priority = -1 }
cargo = { level = "warn", priority = -1 }

# Allow some pedantic lints that can be overly strict
module_name_repetitions = "allow"
missing_errors_doc = "allow"
missing_panics_doc = "allow"
must_use_candidate = "allow"

# Deny some important lints
unwrap_used = "deny"
expect_used = "deny"
panic = "deny"
todo = "warn"
unimplemented = "deny"

# Performance and correctness
clone_on_ref_ptr = "deny"
rc_buffer = "deny"
rc_mutex = "deny"

[workspace.lints.rust]
unsafe_code = "forbid"
missing_docs = "warn"
rust_2018_idioms = { level = "warn", priority = -1 }

# Root package for examples and integration testing
[package]
name = "algo-chuck-toolkit"
edition.workspace = true
version.workspace = true
authors.workspace = true
license.workspace = true
description = "Examples and integration for the Schwab API toolkit"
publish = false

[features]
default = ["oauth", "marketdata", "trader"]
oauth = ["schwab-api/oauth"]
marketdata = ["schwab-api/marketdata"]
trader = ["schwab-api/trader"]
full = ["oauth", "marketdata", "trader"]

[dependencies]
# Use the facade crate for examples
schwab-api = { path = "crates/schwab-api" }
tokio = { workspace = true, features = ["full"] }

# Individual crates for direct usage examples
schwab-api-core = { path = "crates/schwab-api-core" }
schwab-api-types = { path = "crates/schwab-api-types" }
schwab-api-oauth = { path = "crates/schwab-api-oauth" }
schwab-api-marketdata = { path = "crates/schwab-api-marketdata" }
schwab-api-trader = { path = "crates/schwab-api-trader" }

[profile.release]
# Enables Link Time Optimization (LTO). This is often the biggest contributor
# to reducing binary size, as it allows the linker to optimize across crate boundaries.
lto = true

# Ensures the compiler removes debug information, resulting in a much smaller file.
strip = true

# Sets the optimization level higher than the default (level 3).
# opt-level = 3

# Sets the code generation to optimize for size rather than speed. 
# While opt-level = 3 is often fine, "s" or "z" can aggressively shrink the binary.
# opt-level = "s"

