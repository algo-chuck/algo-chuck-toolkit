/*
 * Market Data
 *
 * Trader API - Market data
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: TraderAPI@Schwab.com
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

/// RegularMarket : Market info of security
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RegularMarket {
    /// Regular market last price
    #[serde(
        rename = "regularMarketLastPrice",
        skip_serializing_if = "Option::is_none"
    )]
    pub regular_market_last_price: Option<f64>,
    /// Regular market last size
    #[serde(
        rename = "regularMarketLastSize",
        skip_serializing_if = "Option::is_none"
    )]
    pub regular_market_last_size: Option<i32>,
    /// Regular market net change
    #[serde(
        rename = "regularMarketNetChange",
        skip_serializing_if = "Option::is_none"
    )]
    pub regular_market_net_change: Option<f64>,
    /// Regular market percent change
    #[serde(
        rename = "regularMarketPercentChange",
        skip_serializing_if = "Option::is_none"
    )]
    pub regular_market_percent_change: Option<f64>,
    /// Regular market trade time in milliseconds since Epoch
    #[serde(
        rename = "regularMarketTradeTime",
        skip_serializing_if = "Option::is_none"
    )]
    pub regular_market_trade_time: Option<i64>,
}

impl RegularMarket {
    /// Market info of security
    pub fn new() -> RegularMarket {
        RegularMarket {
            regular_market_last_price: None,
            regular_market_last_size: None,
            regular_market_net_change: None,
            regular_market_percent_change: None,
            regular_market_trade_time: None,
        }
    }
}
