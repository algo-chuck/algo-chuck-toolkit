/*
 * Market Data
 *
 * Trader API - Market data
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: TraderAPI@Schwab.com
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

/// ExpirationType : M for End Of Month Expiration Calendar Cycle. (To match the last business day of the month), Q for Quarterly expirations (last business day of the quarter month MAR/JUN/SEP/DEC), W for Weekly expiration (also called Friday Short Term Expirations) and S for Expires 3rd Friday of the month (also known as regular options).
/// M for End Of Month Expiration Calendar Cycle. (To match the last business day of the month), Q for Quarterly expirations (last business day of the quarter month MAR/JUN/SEP/DEC), W for Weekly expiration (also called Friday Short Term Expirations) and S for Expires 3rd Friday of the month (also known as regular options).
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ExpirationType {
    #[serde(rename = "M")]
    M,
    #[serde(rename = "Q")]
    Q,
    #[serde(rename = "S")]
    S,
    #[serde(rename = "W")]
    W,
}

impl std::fmt::Display for ExpirationType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::M => write!(f, "M"),
            Self::Q => write!(f, "Q"),
            Self::S => write!(f, "S"),
            Self::W => write!(f, "W"),
        }
    }
}

impl Default for ExpirationType {
    fn default() -> ExpirationType {
        Self::M
    }
}
