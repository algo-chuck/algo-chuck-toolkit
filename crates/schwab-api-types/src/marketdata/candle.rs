/*
 * Market Data
 *
 * Trader API - Market data
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: TraderAPI@Schwab.com
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Candle {
    #[serde(rename = "close", skip_serializing_if = "Option::is_none")]
    pub close: Option<f64>,
    #[serde(rename = "datetime", skip_serializing_if = "Option::is_none")]
    pub datetime: Option<i64>,
    #[serde(rename = "datetimeISO8601", skip_serializing_if = "Option::is_none")]
    pub datetime_iso8601: Option<String>,
    #[serde(rename = "high", skip_serializing_if = "Option::is_none")]
    pub high: Option<f64>,
    #[serde(rename = "low", skip_serializing_if = "Option::is_none")]
    pub low: Option<f64>,
    #[serde(rename = "open", skip_serializing_if = "Option::is_none")]
    pub open: Option<f64>,
    #[serde(rename = "volume", skip_serializing_if = "Option::is_none")]
    pub volume: Option<i64>,
}

impl Candle {
    pub fn new() -> Candle {
        Candle {
            close: None,
            datetime: None,
            datetime_iso8601: None,
            high: None,
            low: None,
            open: None,
            volume: None,
        }
    }
}
