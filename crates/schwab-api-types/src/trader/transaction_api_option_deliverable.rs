/*
 * Trader API - Account Access and User Preferences
 *
 * Schwab Trader API access to Account, Order entry and User Preferences
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: TraderAPI@Schwab.com
 * Generated by: https://openapi-generator.tech
 */

use crate::trader;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TransactionApiOptionDeliverable {
    #[serde(rename = "rootSymbol", skip_serializing_if = "Option::is_none")]
    pub root_symbol: Option<String>,
    #[serde(rename = "strikePercent", skip_serializing_if = "Option::is_none")]
    pub strike_percent: Option<i64>,
    #[serde(rename = "deliverableNumber", skip_serializing_if = "Option::is_none")]
    pub deliverable_number: Option<i64>,
    #[serde(rename = "deliverableUnits", skip_serializing_if = "Option::is_none")]
    pub deliverable_units: Option<f64>,
    #[serde(rename = "deliverable", skip_serializing_if = "Option::is_none")]
    pub deliverable: Option<Box<trader::TransactionInstrument>>,
    #[serde(rename = "assetType", skip_serializing_if = "Option::is_none")]
    pub asset_type: Option<trader::AssetType>,
}

impl TransactionApiOptionDeliverable {
    pub fn new() -> TransactionApiOptionDeliverable {
        TransactionApiOptionDeliverable {
            root_symbol: None,
            strike_percent: None,
            deliverable_number: None,
            deliverable_units: None,
            deliverable: None,
            asset_type: None,
        }
    }
}
