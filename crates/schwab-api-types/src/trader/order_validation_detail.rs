/*
 * Trader API - Account Access and User Preferences
 *
 * Schwab Trader API access to Account, Order entry and User Preferences
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: TraderAPI@Schwab.com
 * Generated by: https://openapi-generator.tech
 */

use crate::trader;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OrderValidationDetail {
    #[serde(rename = "validationRuleName", skip_serializing_if = "Option::is_none")]
    pub validation_rule_name: Option<String>,
    #[serde(rename = "message", skip_serializing_if = "Option::is_none")]
    pub message: Option<String>,
    #[serde(rename = "activityMessage", skip_serializing_if = "Option::is_none")]
    pub activity_message: Option<String>,
    #[serde(rename = "originalSeverity", skip_serializing_if = "Option::is_none")]
    pub original_severity: Option<trader::ApiRuleAction>,
    #[serde(rename = "overrideName", skip_serializing_if = "Option::is_none")]
    pub override_name: Option<String>,
    #[serde(rename = "overrideSeverity", skip_serializing_if = "Option::is_none")]
    pub override_severity: Option<trader::ApiRuleAction>,
}

impl OrderValidationDetail {
    pub fn new() -> OrderValidationDetail {
        OrderValidationDetail {
            validation_rule_name: None,
            message: None,
            activity_message: None,
            original_severity: None,
            override_name: None,
            override_severity: None,
        }
    }
}
