/*
 * Trader API - Account Access and User Preferences
 *
 * Schwab Trader API access to Account, Order entry and User Preferences
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: TraderAPI@Schwab.com
 * Generated by: https://openapi-generator.tech
 */

use crate::trader;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OrderValidationResult {
    #[serde(rename = "alerts", skip_serializing_if = "Option::is_none")]
    pub alerts: Option<Vec<trader::OrderValidationDetail>>,
    #[serde(rename = "accepts", skip_serializing_if = "Option::is_none")]
    pub accepts: Option<Vec<trader::OrderValidationDetail>>,
    #[serde(rename = "rejects", skip_serializing_if = "Option::is_none")]
    pub rejects: Option<Vec<trader::OrderValidationDetail>>,
    #[serde(rename = "reviews", skip_serializing_if = "Option::is_none")]
    pub reviews: Option<Vec<trader::OrderValidationDetail>>,
    #[serde(rename = "warns", skip_serializing_if = "Option::is_none")]
    pub warns: Option<Vec<trader::OrderValidationDetail>>,
}

impl OrderValidationResult {
    pub fn new() -> OrderValidationResult {
        OrderValidationResult {
            alerts: None,
            accepts: None,
            rejects: None,
            reviews: None,
            warns: None,
        }
    }
}
