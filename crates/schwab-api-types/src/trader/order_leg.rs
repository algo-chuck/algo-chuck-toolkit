/*
 * Trader API - Account Access and User Preferences
 *
 * Schwab Trader API access to Account, Order entry and User Preferences
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: TraderAPI@Schwab.com
 * Generated by: https://openapi-generator.tech
 */

use crate::trader;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OrderLeg {
    #[serde(rename = "askPrice", skip_serializing_if = "Option::is_none")]
    pub ask_price: Option<f64>,
    #[serde(rename = "bidPrice", skip_serializing_if = "Option::is_none")]
    pub bid_price: Option<f64>,
    #[serde(rename = "lastPrice", skip_serializing_if = "Option::is_none")]
    pub last_price: Option<f64>,
    #[serde(rename = "markPrice", skip_serializing_if = "Option::is_none")]
    pub mark_price: Option<f64>,
    #[serde(
        rename = "projectedCommission",
        skip_serializing_if = "Option::is_none"
    )]
    pub projected_commission: Option<f64>,
    #[serde(rename = "quantity", skip_serializing_if = "Option::is_none")]
    pub quantity: Option<f64>,
    #[serde(rename = "finalSymbol", skip_serializing_if = "Option::is_none")]
    pub final_symbol: Option<String>,
    #[serde(rename = "legId", skip_serializing_if = "Option::is_none")]
    pub leg_id: Option<f64>,
    #[serde(rename = "assetType", skip_serializing_if = "Option::is_none")]
    pub asset_type: Option<trader::AssetType>,
    #[serde(rename = "instruction", skip_serializing_if = "Option::is_none")]
    pub instruction: Option<trader::Instruction>,
}

impl OrderLeg {
    pub fn new() -> OrderLeg {
        OrderLeg {
            ask_price: None,
            bid_price: None,
            last_price: None,
            mark_price: None,
            projected_commission: None,
            quantity: None,
            final_symbol: None,
            leg_id: None,
            asset_type: None,
            instruction: None,
        }
    }
}
